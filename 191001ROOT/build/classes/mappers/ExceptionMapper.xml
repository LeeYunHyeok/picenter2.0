<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="exception">

	<!-- mybatis-config.xml의 typeAlias에 등록해두지 않았다면 <select id="selectMember" resultType="com.org.iopts.dto.MemberVO" > SELECT ID, PW ,NAME FROM TEST </select> 이렇게 해야 한다. -->

	<select id="selectFindSubpath" parameterType="hashmap" resultType="hashmap">
		WITH RECURSIVE 
			CTE AS (
				SELECT C.GROUP_ID AS GID, C.TARGET_ID AS PID, C.HASH_ID AS ID, C.HASH_ID AS CID, C.TARGET_ID AS TID, C.PATH AS NAME, C.PATH AS SHORTNAME, C.PATH AS PATH, 1 LEVEL, T.NAME AS OWNER
				  FROM PI_TARGETS AS T, PI_FIND C LEFT OUTER JOIN PI_EXCEPTION E ON C.GROUP_ID = E.GROUP_ID 
           														AND C.TARGET_ID = E.TARGET_ID 
           														AND C.HASH_ID = E.HASH_ID 
				   												AND IFNULL(E.APPROVAL_STATUS,'') != 'E'
													            AND E.REGDATE = (SELECT MAX(EXS.REGDATE) 
													                               FROM PI_EXCEPTION EXS 
													                              WHERE EXS.HASH_ID = C.HASH_ID AND EXS.GROUP_ID = C.GROUP_ID AND EXS.TARGET_ID = C.TARGET_ID )
				 WHERE T.TARGET_ID = #{target_id}
				<if test="location != null and location != ''">
				   AND C.PATH LIKE CONCAT('%', #{location}, '%')
				</if>
				   AND T.GROUP_ID = C.GROUP_ID
				   AND T.TARGET_ID = C.TARGET_ID
				 UNION ALL
				SELECT C.GROUP_ID AS GID, C.PARENT_ID AS PID, C.NODE_ID AS ID, CTE.CID AS CID, C.TARGET_ID AS TID, CONCAT(CTE.NAME , '>' , C.PATH) AS NAME, C.PATH AS SHORTNAME, 
						CONCAT(CTE.PATH , '>' , C.NODE_ID) AS PATH, CTE.LEVEL + 1 AS LEVEL, T.NAME AS OWNER
				  FROM PI_SUBPATH C, CTE, PI_TARGETS AS T 
				 WHERE C.PARENT_ID = CTE.ID 
				   AND C.GROUP_ID = CTE.GID 
				   AND C.TARGET_ID = CTE.TID
				   AND T.GROUP_ID = C.GROUP_ID
				   AND T.TARGET_ID = C.TARGET_ID
			)
			SELECT CTE.PID, CTE.ID, CTE.NAME, CTE.SHORTNAME AS SHORTNAME, CTE.PATH, CTE.OWNER, CTE.LEVEL, 
			        SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) AS TYPE4, -- 운전면허번호
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) AS TYPE2, -- 외국인등록번호
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) AS TYPE3, -- 여권번호
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) AS TYPE1, -- 주민등록번호
	
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) + 
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) + 
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) + 
			       	SUM(CASE WHEN INSTR(UPPER(SUMM.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN SUMM.MATCH_COUNT ELSE 0 END) AS TYPE,
			       	(SELECT APPROVAL_STATUS FROM PI_EXCEPTION EX 
	              			WHERE EX.HASH_ID = CTE.ID AND EX.GROUP_ID = CTE.GID AND EX.TARGET_ID = CTE.TID 
	                		  AND EX.REGDATE = (SELECT MAX(EXS.REGDATE) FROM PI_EXCEPTION EXS WHERE EXS.HASH_ID = CTE.ID AND EX.GROUP_ID = CTE.GID AND EX.TARGET_ID = CTE.TID )) AS STATUS,   
			       	(SELECT APPROVAL_STATUS FROM PI_DELETION DE
	              			WHERE DE.HASH_ID = CTE.ID AND DE.GROUP_ID = CTE.GID AND DE.TARGET_ID = CTE.TID) AS DEL_STATUS,	            	
              		CASE (SELECT IFNULL(COUNT(*),0) FROM CTE AS CTES WHERE CTES.PID = CTE.ID) WHEN 0 THEN 'true' ELSE 'false' END AS LEAF,
              		'true' AS EXPAND,
	            	'0' AS CHK
	       FROM CTE LEFT OUTER JOIN PI_SUMMARY AS SUMM USE INDEX (PRIMARY) ON SUMM.OBJECT_ID = CTE.ID AND SUMM.GROUP_ID = CTE.GID AND SUMM.TARGET_ID = CTE.TID
	      GROUP BY CTE.PID, CTE.ID, CTE.NAME, CTE.SHORTNAME, CTE.PATH, LOWER(CTE.OWNER), CTE.LEVEL
	      ORDER BY CTE.NAME
	</select>

	<insert id="registException" parameterType="hashmap">
		INSERT INTO PI_EXCEPTION
		(GROUP_ID, TARGET_ID, HASH_ID, APPROVAL_STATUS, REGDATE, OKDATE, REG_USER_NO, OK_USER_NO, REASON) 
		(
			SELECT * FROM (
  				SELECT GROUP_ID, TARGET_ID, HASH_ID, 'W' AS APPROVAL_STATUS, NOW() AS REGDATE, NULL AS OKDATE, #{user_no}, #{ok_user_no}, #{reason}
  				  FROM PI_FIND WHERE HASH_ID IN (#{hash_id})
  				UNION
  				SELECT GROUP_ID, TARGET_ID, NODE_ID, 'W' AS APPROVAL_STATUS, NOW() AS REGDATE, NULL AS OKDATE, #{user_no}, #{ok_user_no}, #{reason}
  				  FROM PI_SUBPATH WHERE NODE_ID IN (#{hash_id})
			) A
		)
		ON DUPLICATE KEY
		UPDATE APPROVAL_STATUS = 'W',
				REGDATE = NOW()
	</insert>

	<insert id="registDeletion" parameterType="hashmap">
		INSERT INTO PI_DELETION
		(GROUP_ID, TARGET_ID, HASH_ID, APPROVAL_STATUS, REGDATE, REG_USER_NO) 
		(
			SELECT * FROM (
  				SELECT GROUP_ID, TARGET_ID, HASH_ID, 'W' AS APPROVAL_STATUS, NOW() AS REGDATE, #{user_no}
  				  FROM PI_FIND WHERE HASH_ID IN (#{hash_id})
  				UNION
  				SELECT GROUP_ID, TARGET_ID, NODE_ID, 'W' AS APPROVAL_STATUS, NOW() AS REGDATE, #{user_no}
  				  FROM PI_SUBPATH WHERE NODE_ID IN (#{hash_id})
			) A
		)
		ON DUPLICATE KEY
		UPDATE APPROVAL_STATUS = 'W',
				REGDATE = NOW()
	</insert>
	
	<delete id="deleteException" parameterType="String">
		DELETE FROM PI_EXCEPTION
		 WHERE HASH_ID IN (#{value})
	</delete>
	
	<select id="getTargetByNode" parameterType="hashmap" resultType="hashmap">
		SELECT GROUP_ID, TARGET_ID, HASH_ID AS ID, FID AS INFO_ID FROM PI_FIND WHERE HASH_ID IN (#{value})
		UNION
		SELECT GROUP_ID, TARGET_ID, NODE_ID AS ID, INFO_ID FROM PI_SUBPATH WHERE NODE_ID IN (#{value})
	</select>
	
	<select id="selectExceptionList" parameterType="hashmap" resultType="hashmap">
		SELECT A.IDX, A.GROUP_ID, A.TARGET_ID, A.HASH_ID, A.APPROVAL_STATUS,
       			DATE_FORMAT(A.REGDATE, '%Y-%m-%d %h:%i:%s') AS REGDATE,
       			DATE_FORMAT(A.OKDATE, '%Y-%m-%d %h:%i:%s') AS OKDATE,
            	A.REASON, B.PATH, LOWER(C.NAME) AS TARGET_NAME,
            	A.REG_USER_NO, (SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = A.reg_user_no) AS REG_USER_NAME,
            	A.OK_USER_NO, (SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = A.OK_user_no) AS OK_USER_NAME
  		  FROM PI_EXCEPTION A, PI_FIND B, PI_TARGETS C
 		 WHERE B.HASH_ID = A.HASH_ID
   		   AND C.TARGET_ID = A.TARGET_ID
   		   AND A.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
   		   AND A.APPROVAL_STATUS = #{status}
   		   AND A.TARGET_ID = #{target_id}
	</select>
	
	<select id="selectDeletionList" parameterType="hashmap" resultType="hashmap">
		SELECT A.IDX, A.GROUP_ID, A.TARGET_ID, A.HASH_ID, 
       			DATE_FORMAT(A.REGDATE, '%Y-%m-%d %h:%i:%s') AS REGDATE,
            	B.PATH, LOWER(C.NAME) AS TARGET_NAME,
            	A.REG_USER_NO, (SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = A.reg_user_no) AS REG_USER_NAME
  		  FROM PI_DELETION A, PI_FIND B, PI_TARGETS C
 		 WHERE B.HASH_ID = A.HASH_ID
   		   AND C.TARGET_ID = A.TARGET_ID
   		   AND A.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
   		   AND A.TARGET_ID = #{target_id}
	</select>
	
	<delete id="deleteDeletion" parameterType="String">
		DELETE FROM PI_DELETION
		 WHERE HASH_ID IN (#{value})
	</delete>
	
	<select id="selectExceptionApprList" parameterType="hashmap" resultType="hashmap">
		SELECT A.IDX, A.GROUP_ID, A.TARGET_ID, A.HASH_ID, A.APPROVAL_STATUS,
       			DATE_FORMAT(A.REGDATE, '%Y-%m-%d %h:%i:%s') AS REGDATE,
       			DATE_FORMAT(A.OKDATE, '%Y-%m-%d %h:%i:%s') AS OKDATE,
            	A.REASON, B.PATH, LOWER(C.NAME) AS TARGET_NAME,
            	A.REG_USER_NO, (SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = A.reg_user_no) AS REG_USER_NAME,
            	A.OK_USER_NO, (SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = A.OK_user_no) AS OK_USER_NAME
  		  FROM PI_EXCEPTION A, PI_FIND B, PI_TARGETS C
 		 WHERE B.HASH_ID = A.HASH_ID
   		   AND C.TARGET_ID = A.TARGET_ID
   		   AND A.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
   		   AND A.APPROVAL_STATUS = 'W'
   		   AND A.TARGET_ID = #{target_id}
   		   AND A.REG_USER_NO = #{user_no}
   		   AND A.OK_USER_NO = #{ok_user_no}   		   
	</select>
	
	<update id="registExceptionAppr" parameterType="hashmap">
		UPDATE PI_EXCEPTION
		   SET OK_USER_NO = #{user_no},
		       OKDATE = NOW(),
		       APPROVAL_STATUS = #{apprType}
		 WHERE IDX = #{idx}
	</update>
	
</mapper>